{"ast":null,"code":"import { Vector2 } from '../../math/Vector2.js';\nimport { Curve } from '../core/Curve.js';\n\nfunction LineCurve(v1, v2) {\n  Curve.call(this);\n  this.type = 'LineCurve';\n  this.v1 = v1 || new Vector2();\n  this.v2 = v2 || new Vector2();\n}\n\nLineCurve.prototype = Object.create(Curve.prototype);\nLineCurve.prototype.constructor = LineCurve;\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector2();\n\n  if (t === 1) {\n    point.copy(this.v2);\n  } else {\n    point.copy(this.v2).sub(this.v1);\n    point.multiplyScalar(t).add(this.v1);\n  }\n\n  return point;\n}; // Line curve is linear, so we can overwrite default getPointAt\n\n\nLineCurve.prototype.getPointAt = function (u, optionalTarget) {\n  return this.getPoint(u, optionalTarget);\n};\n\nLineCurve.prototype.getTangent = function (t, optionalTarget) {\n  var tangent = optionalTarget || new Vector2();\n  tangent.copy(this.v2).sub(this.v1).normalize();\n  return tangent;\n};\n\nLineCurve.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  return this;\n};\n\nLineCurve.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  return data;\n};\n\nLineCurve.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  return this;\n};\n\nexport { LineCurve };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/extras/curves/LineCurve.js"],"names":["Vector2","Curve","LineCurve","v1","v2","call","type","prototype","Object","create","constructor","isLineCurve","getPoint","t","optionalTarget","point","copy","sub","multiplyScalar","add","getPointAt","u","getTangent","tangent","normalize","source","toJSON","data","toArray","fromJSON","json","fromArray"],"mappings":"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","sourcesContent":["import { Vector2 } from '../../math/Vector2.js';\nimport { Curve } from '../core/Curve.js';\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tconst point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\tconst tangent = optionalTarget || new Vector2();\n\n\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\treturn tangent;\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tconst data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\n\nexport { LineCurve };\n"]},"metadata":{},"sourceType":"module"}