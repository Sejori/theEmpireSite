{"ast":null,"code":"import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { MathUtils } from './MathUtils.js';\n\nclass Euler {\n  constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n    Object.defineProperty(this, 'isEuler', {\n      value: true\n    });\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set x(value) {\n    this._x = value;\n\n    this._onChangeCallback();\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set y(value) {\n    this._y = value;\n\n    this._onChangeCallback();\n  }\n\n  get z() {\n    return this._z;\n  }\n\n  set z(value) {\n    this._z = value;\n\n    this._onChangeCallback();\n  }\n\n  get order() {\n    return this._order;\n  }\n\n  set order(value) {\n    this._order = value;\n\n    this._onChangeCallback();\n  }\n\n  set(x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  }\n\n  copy(euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromRotationMatrix(m, order, update) {\n    var clamp = MathUtils.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    switch (order) {\n      case 'XYZ':\n        this._y = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < 0.9999999) {\n          this._x = Math.atan2(-m23, m33);\n          this._z = Math.atan2(-m12, m11);\n        } else {\n          this._x = Math.atan2(m32, m22);\n          this._z = 0;\n        }\n\n        break;\n\n      case 'YXZ':\n        this._x = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < 0.9999999) {\n          this._y = Math.atan2(m13, m33);\n          this._z = Math.atan2(m21, m22);\n        } else {\n          this._y = Math.atan2(-m31, m11);\n          this._z = 0;\n        }\n\n        break;\n\n      case 'ZXY':\n        this._x = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < 0.9999999) {\n          this._y = Math.atan2(-m31, m33);\n          this._z = Math.atan2(-m12, m22);\n        } else {\n          this._y = 0;\n          this._z = Math.atan2(m21, m11);\n        }\n\n        break;\n\n      case 'ZYX':\n        this._y = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < 0.9999999) {\n          this._x = Math.atan2(m32, m33);\n          this._z = Math.atan2(m21, m11);\n        } else {\n          this._x = 0;\n          this._z = Math.atan2(-m12, m22);\n        }\n\n        break;\n\n      case 'YZX':\n        this._z = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < 0.9999999) {\n          this._x = Math.atan2(-m23, m22);\n          this._y = Math.atan2(-m31, m11);\n        } else {\n          this._x = 0;\n          this._y = Math.atan2(m13, m33);\n        }\n\n        break;\n\n      case 'XZY':\n        this._z = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < 0.9999999) {\n          this._x = Math.atan2(m32, m22);\n          this._y = Math.atan2(m13, m11);\n        } else {\n          this._x = Math.atan2(-m23, m33);\n          this._y = 0;\n        }\n\n        break;\n\n      default:\n        console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n    }\n\n    this._order = order;\n    if (update !== false) this._onChangeCallback();\n    return this;\n  }\n\n  setFromQuaternion(q, order, update) {\n    _matrix.makeRotationFromQuaternion(q);\n\n    return this.setFromRotationMatrix(_matrix, order, update);\n  }\n\n  setFromVector3(v, order) {\n    return this.set(v.x, v.y, v.z, order || this._order);\n  }\n\n  reorder(newOrder) {\n    // WARNING: this discards revolution information -bhouston\n    _quaternion.setFromEuler(this);\n\n    return this.setFromQuaternion(_quaternion, newOrder);\n  }\n\n  equals(euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  }\n\n  fromArray(array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  toArray(array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  }\n\n  toVector3(optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new Vector3(this._x, this._y, this._z);\n    }\n  }\n\n  _onChange(callback) {\n    this._onChangeCallback = callback;\n    return this;\n  }\n\n  _onChangeCallback() {}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\nvar _matrix = /*@__PURE__*/new Matrix4();\n\nvar _quaternion = /*@__PURE__*/new Quaternion();\n\nexport { Euler };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/math/Euler.js"],"names":["Quaternion","Vector3","Matrix4","MathUtils","Euler","constructor","x","y","z","order","DefaultOrder","Object","defineProperty","value","_x","_y","_z","_order","_onChangeCallback","set","clone","copy","euler","setFromRotationMatrix","m","update","clamp","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","Math","asin","abs","atan2","console","warn","setFromQuaternion","q","_matrix","makeRotationFromQuaternion","setFromVector3","v","reorder","newOrder","_quaternion","setFromEuler","equals","fromArray","array","undefined","toArray","offset","toVector3","optionalResult","_onChange","callback","RotationOrders"],"mappings":"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","sourcesContent":["import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { MathUtils } from './MathUtils.js';\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tObject.defineProperty( this, 'isEuler', { value: true } );\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order, update ) {\n\n\t\tconst clamp = MathUtils.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\ttoVector3( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\n\nexport { Euler };\n"]},"metadata":{},"sourceType":"module"}