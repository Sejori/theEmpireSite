{"ast":null,"code":"import { Camera } from '../cameras/Camera.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { Color } from '../math/Color.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nvar _vector = /*@__PURE__*/new Vector3();\n\nvar _camera = /*@__PURE__*/new Camera();\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\n\nclass CameraHelper extends LineSegments {\n  constructor(camera) {\n    var geometry = new BufferGeometry();\n    var material = new LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: true,\n      toneMapped: false\n    });\n    var vertices = [];\n    var colors = [];\n    var pointMap = {}; // colors\n\n    var colorFrustum = new Color(0xffaa00);\n    var colorCone = new Color(0xff0000);\n    var colorUp = new Color(0x00aaff);\n    var colorTarget = new Color(0xffffff);\n    var colorCross = new Color(0x333333); // near\n\n    addLine('n1', 'n2', colorFrustum);\n    addLine('n2', 'n4', colorFrustum);\n    addLine('n4', 'n3', colorFrustum);\n    addLine('n3', 'n1', colorFrustum); // far\n\n    addLine('f1', 'f2', colorFrustum);\n    addLine('f2', 'f4', colorFrustum);\n    addLine('f4', 'f3', colorFrustum);\n    addLine('f3', 'f1', colorFrustum); // sides\n\n    addLine('n1', 'f1', colorFrustum);\n    addLine('n2', 'f2', colorFrustum);\n    addLine('n3', 'f3', colorFrustum);\n    addLine('n4', 'f4', colorFrustum); // cone\n\n    addLine('p', 'n1', colorCone);\n    addLine('p', 'n2', colorCone);\n    addLine('p', 'n3', colorCone);\n    addLine('p', 'n4', colorCone); // up\n\n    addLine('u1', 'u2', colorUp);\n    addLine('u2', 'u3', colorUp);\n    addLine('u3', 'u1', colorUp); // target\n\n    addLine('c', 't', colorTarget);\n    addLine('p', 'c', colorCross); // cross\n\n    addLine('cn1', 'cn2', colorCross);\n    addLine('cn3', 'cn4', colorCross);\n    addLine('cf1', 'cf2', colorCross);\n    addLine('cf3', 'cf4', colorCross);\n\n    function addLine(a, b, color) {\n      addPoint(a, color);\n      addPoint(b, color);\n    }\n\n    function addPoint(id, color) {\n      vertices.push(0, 0, 0);\n      colors.push(color.r, color.g, color.b);\n\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n\n      pointMap[id].push(vertices.length / 3 - 1);\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    super(geometry, material);\n    this.type = 'CameraHelper';\n    this.camera = camera;\n    if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.pointMap = pointMap;\n    this.update();\n  }\n\n  update() {\n    var geometry = this.geometry;\n    var pointMap = this.pointMap;\n    var w = 1,\n        h = 1; // we need just camera projection matrix inverse\n    // world matrix must be identity\n\n    _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n    setPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n    setPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n    setPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n    setPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n    setPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n    setPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n    setPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n    setPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n    setPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n    setPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n    setPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n    setPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n    setPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n    setPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n    setPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n    setPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n    setPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n    setPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n    setPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n    setPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n    setPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n    geometry.getAttribute('position').needsUpdate = true;\n  }\n\n}\n\nfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n  _vector.set(x, y, z).unproject(camera);\n\n  var points = pointMap[point];\n\n  if (points !== undefined) {\n    var position = geometry.getAttribute('position');\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      position.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n    }\n  }\n}\n\nexport { CameraHelper };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/helpers/CameraHelper.js"],"names":["Camera","Vector3","LineSegments","Color","LineBasicMaterial","BufferGeometry","Float32BufferAttribute","_vector","_camera","CameraHelper","constructor","camera","geometry","material","color","vertexColors","toneMapped","vertices","colors","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","a","b","addPoint","id","push","r","g","undefined","length","setAttribute","type","updateProjectionMatrix","matrix","matrixWorld","matrixAutoUpdate","update","w","h","projectionMatrixInverse","copy","setPoint","getAttribute","needsUpdate","point","x","y","z","set","unproject","points","position","i","l","setXYZ"],"mappings":"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","sourcesContent":["import { Camera } from '../cameras/Camera.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { Color } from '../math/Color.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nexport { CameraHelper };\n"]},"metadata":{},"sourceType":"module"}