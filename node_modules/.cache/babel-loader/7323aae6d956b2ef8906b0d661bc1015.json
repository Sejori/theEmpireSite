{"ast":null,"code":"import { LineSegments } from '../objects/LineSegments.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nvar _vector = /*@__PURE__*/new Vector3();\n\nvar _boneMatrix = /*@__PURE__*/new Matrix4();\n\nvar _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\nclass SkeletonHelper extends LineSegments {\n  constructor(object) {\n    var bones = getBoneList(object);\n    var geometry = new BufferGeometry();\n    var vertices = [];\n    var colors = [];\n    var color1 = new Color(0, 0, 1);\n    var color2 = new Color(0, 1, 0);\n\n    for (var i = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        vertices.push(0, 0, 0);\n        vertices.push(0, 0, 0);\n        colors.push(color1.r, color1.g, color1.b);\n        colors.push(color2.r, color2.g, color2.b);\n      }\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: true,\n      depthTest: false,\n      depthWrite: false,\n      toneMapped: false,\n      transparent: true\n    });\n    super(geometry, material);\n    this.type = 'SkeletonHelper';\n    this.isSkeletonHelper = true;\n    this.root = object;\n    this.bones = bones;\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n  }\n\n  updateMatrixWorld(force) {\n    var bones = this.bones;\n    var geometry = this.geometry;\n    var position = geometry.getAttribute('position');\n\n    _matrixWorldInv.getInverse(this.root.matrixWorld);\n\n    for (var i = 0, j = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n        _vector.setFromMatrixPosition(_boneMatrix);\n\n        position.setXYZ(j, _vector.x, _vector.y, _vector.z);\n\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n        _vector.setFromMatrixPosition(_boneMatrix);\n\n        position.setXYZ(j + 1, _vector.x, _vector.y, _vector.z);\n        j += 2;\n      }\n    }\n\n    geometry.getAttribute('position').needsUpdate = true;\n    super.updateMatrixWorld(force);\n  }\n\n}\n\nfunction getBoneList(object) {\n  var boneList = [];\n\n  if (object && object.isBone) {\n    boneList.push(object);\n  }\n\n  for (var i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, getBoneList(object.children[i]));\n  }\n\n  return boneList;\n}\n\nexport { SkeletonHelper };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/helpers/SkeletonHelper.js"],"names":["LineSegments","Matrix4","LineBasicMaterial","Color","Vector3","BufferGeometry","Float32BufferAttribute","_vector","_boneMatrix","_matrixWorldInv","SkeletonHelper","constructor","object","bones","getBoneList","geometry","vertices","colors","color1","color2","i","length","bone","parent","isBone","push","r","g","b","setAttribute","material","vertexColors","depthTest","depthWrite","toneMapped","transparent","type","isSkeletonHelper","root","matrix","matrixWorld","matrixAutoUpdate","updateMatrixWorld","force","position","getAttribute","getInverse","j","multiplyMatrices","setFromMatrixPosition","setXYZ","x","y","z","needsUpdate","boneList","children","apply"],"mappings":"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","sourcesContent":["import { LineSegments } from '../objects/LineSegments.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector.x, _vector.y, _vector.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector.x, _vector.y, _vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\n\nexport { SkeletonHelper };\n"]},"metadata":{},"sourceType":"module"}