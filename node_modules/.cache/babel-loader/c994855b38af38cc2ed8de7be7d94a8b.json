{"ast":null,"code":"import { Vector3 } from '../math/Vector3.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Line } from '../objects/Line.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\n\nvar _v1 = /*@__PURE__*/new Vector3();\n\nvar _v2 = /*@__PURE__*/new Vector3();\n\nvar _v3 = /*@__PURE__*/new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n  constructor(light, size, color) {\n    super();\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    if (size === undefined) size = 1;\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n    var material = new LineBasicMaterial({\n      fog: false,\n      toneMapped: false\n    });\n    this.lightPlane = new Line(geometry, material);\n    this.add(this.lightPlane);\n    geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n    this.targetLine = new Line(geometry, material);\n    this.add(this.targetLine);\n    this.update();\n  }\n\n  dispose() {\n    this.lightPlane.geometry.dispose();\n    this.lightPlane.material.dispose();\n    this.targetLine.geometry.dispose();\n    this.targetLine.material.dispose();\n  }\n\n  update() {\n    _v1.setFromMatrixPosition(this.light.matrixWorld);\n\n    _v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n    _v3.subVectors(_v2, _v1);\n\n    this.lightPlane.lookAt(_v2);\n\n    if (this.color !== undefined) {\n      this.lightPlane.material.color.set(this.color);\n      this.targetLine.material.color.set(this.color);\n    } else {\n      this.lightPlane.material.color.copy(this.light.color);\n      this.targetLine.material.color.copy(this.light.color);\n    }\n\n    this.targetLine.lookAt(_v2);\n    this.targetLine.scale.z = _v3.length();\n  }\n\n}\n\nexport { DirectionalLightHelper };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/helpers/DirectionalLightHelper.js"],"names":["Vector3","Object3D","Line","Float32BufferAttribute","BufferGeometry","LineBasicMaterial","_v1","_v2","_v3","DirectionalLightHelper","constructor","light","size","color","updateMatrixWorld","matrix","matrixWorld","matrixAutoUpdate","undefined","geometry","setAttribute","material","fog","toneMapped","lightPlane","add","targetLine","update","dispose","setFromMatrixPosition","target","subVectors","lookAt","set","copy","scale","z","length"],"mappings":"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","sourcesContent":["import { Vector3 } from '../math/Vector3.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Line } from '../objects/Line.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\n\nexport { DirectionalLightHelper };\n"]},"metadata":{},"sourceType":"module"}