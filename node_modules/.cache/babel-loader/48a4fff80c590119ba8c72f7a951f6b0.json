{"ast":null,"code":"import { UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipmapNearestFilter, NearestMipmapLinearFilter, LinearFilter, LinearMipmapNearestFilter, LinearMipmapLinearFilter } from '../constants.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Group } from '../objects/Group.js';\nimport { InstancedMesh } from '../objects/InstancedMesh.js';\nimport { Sprite } from '../objects/Sprite.js';\nimport { Points } from '../objects/Points.js';\nimport { Line } from '../objects/Line.js';\nimport { LineLoop } from '../objects/LineLoop.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { LOD } from '../objects/LOD.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { Shape } from '../extras/core/Shape.js';\nimport { Fog } from '../scenes/Fog.js';\nimport { FogExp2 } from '../scenes/FogExp2.js';\nimport { HemisphereLight } from '../lights/HemisphereLight.js';\nimport { SpotLight } from '../lights/SpotLight.js';\nimport { PointLight } from '../lights/PointLight.js';\nimport { DirectionalLight } from '../lights/DirectionalLight.js';\nimport { AmbientLight } from '../lights/AmbientLight.js';\nimport { RectAreaLight } from '../lights/RectAreaLight.js';\nimport { LightProbe } from '../lights/LightProbe.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { Scene } from '../scenes/Scene.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\nimport { Texture } from '../textures/Texture.js';\nimport { ImageLoader } from './ImageLoader.js';\nimport { LoadingManager } from './LoadingManager.js';\nimport { AnimationClip } from '../animation/AnimationClip.js';\nimport { MaterialLoader } from './MaterialLoader.js';\nimport { LoaderUtils } from './LoaderUtils.js';\nimport { BufferGeometryLoader } from './BufferGeometryLoader.js';\nimport { Loader } from './Loader.js';\nimport { FileLoader } from './FileLoader.js';\nimport * as Geometries from '../geometries/Geometries.js';\nimport * as Curves from '../extras/curves/Curves.js';\n\nclass ObjectLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n    this.resourcePath = this.resourcePath || path;\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      var json = null;\n\n      try {\n        json = JSON.parse(text);\n      } catch (error) {\n        if (onError !== undefined) onError(error);\n        console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n        return;\n      }\n\n      var metadata = json.metadata;\n\n      if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n        console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n        return;\n      }\n\n      scope.parse(json, onLoad);\n    }, onProgress, onError);\n  }\n\n  parse(json, onLoad) {\n    var shapes = this.parseShape(json.shapes);\n    var geometries = this.parseGeometries(json.geometries, shapes);\n    var images = this.parseImages(json.images, function () {\n      if (onLoad !== undefined) onLoad(object);\n    });\n    var textures = this.parseTextures(json.textures, images);\n    var materials = this.parseMaterials(json.materials, textures);\n    var object = this.parseObject(json.object, geometries, materials);\n\n    if (json.animations) {\n      object.animations = this.parseAnimations(json.animations);\n    }\n\n    if (json.images === undefined || json.images.length === 0) {\n      if (onLoad !== undefined) onLoad(object);\n    }\n\n    return object;\n  }\n\n  parseShape(json) {\n    var shapes = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var shape = new Shape().fromJSON(json[i]);\n        shapes[shape.uuid] = shape;\n      }\n    }\n\n    return shapes;\n  }\n\n  parseGeometries(json, shapes) {\n    var geometries = {};\n    var geometryShapes;\n\n    if (json !== undefined) {\n      var bufferGeometryLoader = new BufferGeometryLoader();\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var geometry = void 0;\n        var data = json[i];\n\n        switch (data.type) {\n          case 'PlaneGeometry':\n          case 'PlaneBufferGeometry':\n            geometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n            break;\n\n          case 'BoxGeometry':\n          case 'BoxBufferGeometry':\n          case 'CubeGeometry':\n            // backwards compatible\n            geometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n            break;\n\n          case 'CircleGeometry':\n          case 'CircleBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'CylinderGeometry':\n          case 'CylinderBufferGeometry':\n            geometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'ConeGeometry':\n          case 'ConeBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'SphereGeometry':\n          case 'SphereBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'DodecahedronGeometry':\n          case 'DodecahedronBufferGeometry':\n          case 'IcosahedronGeometry':\n          case 'IcosahedronBufferGeometry':\n          case 'OctahedronGeometry':\n          case 'OctahedronBufferGeometry':\n          case 'TetrahedronGeometry':\n          case 'TetrahedronBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.detail);\n            break;\n\n          case 'RingGeometry':\n          case 'RingBufferGeometry':\n            geometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'TorusGeometry':\n          case 'TorusBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n            break;\n\n          case 'TorusKnotGeometry':\n          case 'TorusKnotBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n            break;\n\n          case 'TubeGeometry':\n          case 'TubeBufferGeometry':\n            // This only works for built-in curves (e.g. CatmullRomCurve3).\n            // User defined curves or instances of CurvePath will not be deserialized.\n            geometry = new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n            break;\n\n          case 'LatheGeometry':\n          case 'LatheBufferGeometry':\n            geometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n            break;\n\n          case 'PolyhedronGeometry':\n          case 'PolyhedronBufferGeometry':\n            geometry = new Geometries[data.type](data.vertices, data.indices, data.radius, data.details);\n            break;\n\n          case 'ShapeGeometry':\n          case 'ShapeBufferGeometry':\n            geometryShapes = [];\n\n            for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n              var shape = shapes[data.shapes[j]];\n              geometryShapes.push(shape);\n            }\n\n            geometry = new Geometries[data.type](geometryShapes, data.curveSegments);\n            break;\n\n          case 'ExtrudeGeometry':\n          case 'ExtrudeBufferGeometry':\n            geometryShapes = [];\n\n            for (var _j = 0, _jl = data.shapes.length; _j < _jl; _j++) {\n              var _shape = shapes[data.shapes[_j]];\n              geometryShapes.push(_shape);\n            }\n\n            var extrudePath = data.options.extrudePath;\n\n            if (extrudePath !== undefined) {\n              data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n            }\n\n            geometry = new Geometries[data.type](geometryShapes, data.options);\n            break;\n\n          case 'BufferGeometry':\n          case 'InstancedBufferGeometry':\n            geometry = bufferGeometryLoader.parse(data);\n            break;\n\n          case 'Geometry':\n            console.error('THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.');\n            break;\n\n          default:\n            console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n            continue;\n        }\n\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        if (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n        geometries[data.uuid] = geometry;\n      }\n    }\n\n    return geometries;\n  }\n\n  parseMaterials(json, textures) {\n    var cache = {}; // MultiMaterial\n\n    var materials = {};\n\n    if (json !== undefined) {\n      var loader = new MaterialLoader();\n      loader.setTextures(textures);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.type === 'MultiMaterial') {\n          // Deprecated\n          var array = [];\n\n          for (var j = 0; j < data.materials.length; j++) {\n            var material = data.materials[j];\n\n            if (cache[material.uuid] === undefined) {\n              cache[material.uuid] = loader.parse(material);\n            }\n\n            array.push(cache[material.uuid]);\n          }\n\n          materials[data.uuid] = array;\n        } else {\n          if (cache[data.uuid] === undefined) {\n            cache[data.uuid] = loader.parse(data);\n          }\n\n          materials[data.uuid] = cache[data.uuid];\n        }\n      }\n    }\n\n    return materials;\n  }\n\n  parseAnimations(json) {\n    var animations = [];\n\n    for (var i = 0; i < json.length; i++) {\n      var data = json[i];\n      var clip = AnimationClip.parse(data);\n      if (data.uuid !== undefined) clip.uuid = data.uuid;\n      animations.push(clip);\n    }\n\n    return animations;\n  }\n\n  parseImages(json, onLoad) {\n    var scope = this;\n    var images = {};\n    var loader;\n\n    function loadImage(url) {\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      }, undefined, function () {\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n    }\n\n    if (json !== undefined && json.length > 0) {\n      var manager = new LoadingManager(onLoad);\n      loader = new ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n\n      for (var i = 0, il = json.length; i < il; i++) {\n        var image = json[i];\n        var url = image.url;\n\n        if (Array.isArray(url)) {\n          // load array of images e.g CubeTexture\n          images[image.uuid] = [];\n\n          for (var j = 0, jl = url.length; j < jl; j++) {\n            var currentUrl = url[j];\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.resourcePath + currentUrl;\n            images[image.uuid].push(loadImage(path));\n          }\n        } else {\n          // load single image\n          var _path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.resourcePath + image.url;\n\n          images[image.uuid] = loadImage(_path);\n        }\n      }\n    }\n\n    return images;\n  }\n\n  parseTextures(json, images) {\n    function parseConstant(value, type) {\n      if (typeof value === 'number') return value;\n      console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n      return type[value];\n    }\n\n    var textures = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.image === undefined) {\n          console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n        }\n\n        if (images[data.image] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined image', data.image);\n        }\n\n        var texture = void 0;\n\n        if (Array.isArray(images[data.image])) {\n          texture = new CubeTexture(images[data.image]);\n        } else {\n          texture = new Texture(images[data.image]);\n        }\n\n        texture.needsUpdate = true;\n        texture.uuid = data.uuid;\n        if (data.name !== undefined) texture.name = data.name;\n        if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n        if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n        if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n        if (data.center !== undefined) texture.center.fromArray(data.center);\n        if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n        if (data.wrap !== undefined) {\n          texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n          texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n        }\n\n        if (data.format !== undefined) texture.format = data.format;\n        if (data.type !== undefined) texture.type = data.type;\n        if (data.encoding !== undefined) texture.encoding = data.encoding;\n        if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n        if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n        if (data.flipY !== undefined) texture.flipY = data.flipY;\n        if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n        if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n        textures[data.uuid] = texture;\n      }\n    }\n\n    return textures;\n  }\n\n  parseObject(data, geometries, materials) {\n    var object;\n\n    function getGeometry(name) {\n      if (geometries[name] === undefined) {\n        console.warn('THREE.ObjectLoader: Undefined geometry', name);\n      }\n\n      return geometries[name];\n    }\n\n    function getMaterial(name) {\n      if (name === undefined) return undefined;\n\n      if (Array.isArray(name)) {\n        var array = [];\n\n        for (var i = 0, l = name.length; i < l; i++) {\n          var uuid = name[i];\n\n          if (materials[uuid] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', uuid);\n          }\n\n          array.push(materials[uuid]);\n        }\n\n        return array;\n      }\n\n      if (materials[name] === undefined) {\n        console.warn('THREE.ObjectLoader: Undefined material', name);\n      }\n\n      return materials[name];\n    }\n\n    var geometry, material;\n\n    switch (data.type) {\n      case 'Scene':\n        object = new Scene();\n\n        if (data.background !== undefined) {\n          if (Number.isInteger(data.background)) {\n            object.background = new Color(data.background);\n          }\n        }\n\n        if (data.fog !== undefined) {\n          if (data.fog.type === 'Fog') {\n            object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n          } else if (data.fog.type === 'FogExp2') {\n            object.fog = new FogExp2(data.fog.color, data.fog.density);\n          }\n        }\n\n        break;\n\n      case 'PerspectiveCamera':\n        object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n        if (data.focus !== undefined) object.focus = data.focus;\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n        if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n        if (data.view !== undefined) object.view = Object.assign({}, data.view);\n        break;\n\n      case 'OrthographicCamera':\n        object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.view !== undefined) object.view = Object.assign({}, data.view);\n        break;\n\n      case 'AmbientLight':\n        object = new AmbientLight(data.color, data.intensity);\n        break;\n\n      case 'DirectionalLight':\n        object = new DirectionalLight(data.color, data.intensity);\n        break;\n\n      case 'PointLight':\n        object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n        break;\n\n      case 'RectAreaLight':\n        object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n        break;\n\n      case 'SpotLight':\n        object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n        break;\n\n      case 'HemisphereLight':\n        object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n        break;\n\n      case 'LightProbe':\n        object = new LightProbe().fromJSON(data);\n        break;\n\n      case 'SkinnedMesh':\n        console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');\n\n      case 'Mesh':\n        geometry = getGeometry(data.geometry);\n        material = getMaterial(data.material);\n        object = new Mesh(geometry, material);\n        break;\n\n      case 'InstancedMesh':\n        geometry = getGeometry(data.geometry);\n        material = getMaterial(data.material);\n        var count = data.count;\n        var instanceMatrix = data.instanceMatrix;\n        object = new InstancedMesh(geometry, material, count);\n        object.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\n        break;\n\n      case 'LOD':\n        object = new LOD();\n        break;\n\n      case 'Line':\n        object = new Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n        break;\n\n      case 'LineLoop':\n        object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n\n      case 'LineSegments':\n        object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n\n      case 'PointCloud':\n      case 'Points':\n        object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n\n      case 'Sprite':\n        object = new Sprite(getMaterial(data.material));\n        break;\n\n      case 'Group':\n        object = new Group();\n        break;\n\n      default:\n        object = new Object3D();\n    }\n\n    object.uuid = data.uuid;\n    if (data.name !== undefined) object.name = data.name;\n\n    if (data.matrix !== undefined) {\n      object.matrix.fromArray(data.matrix);\n      if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n      if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n    } else {\n      if (data.position !== undefined) object.position.fromArray(data.position);\n      if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n      if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n      if (data.scale !== undefined) object.scale.fromArray(data.scale);\n    }\n\n    if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n    if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n    if (data.shadow) {\n      if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n      if (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n      if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n      if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n      if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n    }\n\n    if (data.visible !== undefined) object.visible = data.visible;\n    if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n    if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n    if (data.userData !== undefined) object.userData = data.userData;\n    if (data.layers !== undefined) object.layers.mask = data.layers;\n\n    if (data.children !== undefined) {\n      var children = data.children;\n\n      for (var i = 0; i < children.length; i++) {\n        object.add(this.parseObject(children[i], geometries, materials));\n      }\n    }\n\n    if (data.type === 'LOD') {\n      if (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n      var levels = data.levels;\n\n      for (var l = 0; l < levels.length; l++) {\n        var level = levels[l];\n        var child = object.getObjectByProperty('uuid', level.object);\n\n        if (child !== undefined) {\n          object.addLevel(child, level.distance);\n        }\n      }\n    }\n\n    return object;\n  }\n  /* DEPRECATED */\n\n\n  setTexturePath(value) {\n    console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n    return this.setResourcePath(value);\n  }\n\n}\n\nvar TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping\n};\nvar TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nvar TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n  NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n  LinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\nexport { ObjectLoader };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/loaders/ObjectLoader.js"],"names":["UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","BufferAttribute","Color","Object3D","Group","InstancedMesh","Sprite","Points","Line","LineLoop","LineSegments","LOD","Mesh","Shape","Fog","FogExp2","HemisphereLight","SpotLight","PointLight","DirectionalLight","AmbientLight","RectAreaLight","LightProbe","OrthographicCamera","PerspectiveCamera","Scene","CubeTexture","Texture","ImageLoader","LoadingManager","AnimationClip","MaterialLoader","LoaderUtils","BufferGeometryLoader","Loader","FileLoader","Geometries","Curves","ObjectLoader","constructor","manager","load","url","onLoad","onProgress","onError","scope","path","extractUrlBase","resourcePath","loader","setPath","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","json","JSON","parse","error","undefined","console","message","metadata","type","toLowerCase","shapes","parseShape","geometries","parseGeometries","images","parseImages","object","textures","parseTextures","materials","parseMaterials","parseObject","animations","parseAnimations","length","i","l","shape","fromJSON","uuid","geometryShapes","bufferGeometryLoader","geometry","data","width","height","widthSegments","heightSegments","depth","depthSegments","radius","segments","thetaStart","thetaLength","radiusTop","radiusBottom","radialSegments","openEnded","phiStart","phiLength","detail","innerRadius","outerRadius","thetaSegments","phiSegments","tube","tubularSegments","arc","p","q","closed","points","vertices","indices","details","j","jl","push","curveSegments","extrudePath","options","warn","name","isBufferGeometry","userData","cache","setTextures","array","material","clip","loadImage","itemStart","itemEnd","itemError","setCrossOrigin","crossOrigin","il","image","Array","isArray","currentUrl","test","parseConstant","value","texture","needsUpdate","mapping","TEXTURE_MAPPING","offset","fromArray","repeat","center","rotation","wrap","wrapS","TEXTURE_WRAPPING","wrapT","format","encoding","minFilter","TEXTURE_FILTER","magFilter","anisotropy","flipY","premultiplyAlpha","unpackAlignment","getGeometry","getMaterial","background","Number","isInteger","fog","color","near","far","density","fov","aspect","focus","zoom","filmGauge","filmOffset","view","Object","assign","left","right","top","bottom","intensity","distance","decay","angle","penumbra","groundColor","count","instanceMatrix","Float32Array","mode","matrix","matrixAutoUpdate","decompose","position","quaternion","scale","castShadow","receiveShadow","shadow","bias","normalBias","mapSize","camera","visible","frustumCulled","renderOrder","layers","mask","children","add","autoUpdate","levels","level","child","getObjectByProperty","addLevel","setTexturePath","setResourcePath"],"mappings":"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","sourcesContent":["import {\n\tUVMapping,\n\tCubeReflectionMapping,\n\tCubeRefractionMapping,\n\tEquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping,\n\tCubeUVReflectionMapping,\n\tCubeUVRefractionMapping,\n\n\tRepeatWrapping,\n\tClampToEdgeWrapping,\n\tMirroredRepeatWrapping,\n\n\tNearestFilter,\n\tNearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter,\n\tLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter\n} from '../constants.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Group } from '../objects/Group.js';\nimport { InstancedMesh } from '../objects/InstancedMesh.js';\nimport { Sprite } from '../objects/Sprite.js';\nimport { Points } from '../objects/Points.js';\nimport { Line } from '../objects/Line.js';\nimport { LineLoop } from '../objects/LineLoop.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { LOD } from '../objects/LOD.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { Shape } from '../extras/core/Shape.js';\nimport { Fog } from '../scenes/Fog.js';\nimport { FogExp2 } from '../scenes/FogExp2.js';\nimport { HemisphereLight } from '../lights/HemisphereLight.js';\nimport { SpotLight } from '../lights/SpotLight.js';\nimport { PointLight } from '../lights/PointLight.js';\nimport { DirectionalLight } from '../lights/DirectionalLight.js';\nimport { AmbientLight } from '../lights/AmbientLight.js';\nimport { RectAreaLight } from '../lights/RectAreaLight.js';\nimport { LightProbe } from '../lights/LightProbe.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { Scene } from '../scenes/Scene.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\nimport { Texture } from '../textures/Texture.js';\nimport { ImageLoader } from './ImageLoader.js';\nimport { LoadingManager } from './LoadingManager.js';\nimport { AnimationClip } from '../animation/AnimationClip.js';\nimport { MaterialLoader } from './MaterialLoader.js';\nimport { LoaderUtils } from './LoaderUtils.js';\nimport { BufferGeometryLoader } from './BufferGeometryLoader.js';\nimport { Loader } from './Loader.js';\nimport { FileLoader } from './FileLoader.js';\nimport * as Geometries from '../geometries/Geometries.js';\nimport * as Curves from '../extras/curves/Curves.js';\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst shapes = this.parseShape( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tparseShape( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\t\tlet geometryShapes;\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst data = json[ i ];\n\n\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nexport { ObjectLoader };\n"]},"metadata":{},"sourceType":"module"}