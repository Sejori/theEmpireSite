{"ast":null,"code":"import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, GammaEncoding, RGBDEncoding, RGBM16Encoding, RGBM7Encoding, RGBEEncoding, sRGBEncoding, LinearEncoding, LogLuvEncoding, GLSL3 } from '../../constants.js';\nvar programIdCount = 0;\n\nfunction addLineNumbers(string) {\n  var lines = string.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    lines[i] = i + 1 + ': ' + lines[i];\n  }\n\n  return lines.join('\\n');\n}\n\nfunction getEncodingComponents(encoding) {\n  switch (encoding) {\n    case LinearEncoding:\n      return ['Linear', '( value )'];\n\n    case sRGBEncoding:\n      return ['sRGB', '( value )'];\n\n    case RGBEEncoding:\n      return ['RGBE', '( value )'];\n\n    case RGBM7Encoding:\n      return ['RGBM', '( value, 7.0 )'];\n\n    case RGBM16Encoding:\n      return ['RGBM', '( value, 16.0 )'];\n\n    case RGBDEncoding:\n      return ['RGBD', '( value, 256.0 )'];\n\n    case GammaEncoding:\n      return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n    case LogLuvEncoding:\n      return ['LogLuv', '( value )'];\n\n    default:\n      console.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n      return ['Linear', '( value )'];\n  }\n}\n\nfunction getShaderErrors(gl, shader, type) {\n  var status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  var log = gl.getShaderInfoLog(shader).trim();\n  if (status && log === '') return ''; // --enable-privileged-webgl-extension\n  // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n  var source = gl.getShaderSource(shader);\n  return 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers(source);\n}\n\nfunction getTexelDecodingFunction(functionName, encoding) {\n  var components = getEncodingComponents(encoding);\n  return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n}\n\nfunction getTexelEncodingFunction(functionName, encoding) {\n  var components = getEncodingComponents(encoding);\n  return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n}\n\nfunction getToneMappingFunction(functionName, toneMapping) {\n  var toneMappingName;\n\n  switch (toneMapping) {\n    case LinearToneMapping:\n      toneMappingName = 'Linear';\n      break;\n\n    case ReinhardToneMapping:\n      toneMappingName = 'Reinhard';\n      break;\n\n    case CineonToneMapping:\n      toneMappingName = 'OptimizedCineon';\n      break;\n\n    case ACESFilmicToneMapping:\n      toneMappingName = 'ACESFilmic';\n      break;\n\n    case CustomToneMapping:\n      toneMappingName = 'Custom';\n      break;\n\n    default:\n      console.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n      toneMappingName = 'Linear';\n  }\n\n  return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n}\n\nfunction generateExtensions(parameters) {\n  var chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n  return chunks.filter(filterEmptyLine).join('\\n');\n}\n\nfunction generateDefines(defines) {\n  var chunks = [];\n\n  for (var name in defines) {\n    var value = defines[name];\n    if (value === false) continue;\n    chunks.push('#define ' + name + ' ' + value);\n  }\n\n  return chunks.join('\\n');\n}\n\nfunction fetchAttributeLocations(gl, program) {\n  var attributes = {};\n  var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var i = 0; i < n; i++) {\n    var info = gl.getActiveAttrib(program, i);\n    var name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n    attributes[name] = gl.getAttribLocation(program, name);\n  }\n\n  return attributes;\n}\n\nfunction filterEmptyLine(string) {\n  return string !== '';\n}\n\nfunction replaceLightNums(string, parameters) {\n  return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n}\n\nfunction replaceClippingPlaneNums(string, parameters) {\n  return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n} // Resolve Includes\n\n\nvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes(string) {\n  return string.replace(includePattern, includeReplacer);\n}\n\nfunction includeReplacer(match, include) {\n  var string = ShaderChunk[include];\n\n  if (string === undefined) {\n    throw new Error('Can not resolve #include <' + include + '>');\n  }\n\n  return resolveIncludes(string);\n} // Unroll Loops\n\n\nvar deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nvar unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops(string) {\n  return string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n}\n\nfunction deprecatedLoopReplacer(match, start, end, snippet) {\n  console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n  return loopReplacer(match, start, end, snippet);\n}\n\nfunction loopReplacer(match, start, end, snippet) {\n  var string = '';\n\n  for (var i = parseInt(start); i < parseInt(end); i++) {\n    string += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n  }\n\n  return string;\n} //\n\n\nfunction generatePrecision(parameters) {\n  var precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n  if (parameters.precision === \"highp\") {\n    precisionstring += \"\\n#define HIGH_PRECISION\";\n  } else if (parameters.precision === \"mediump\") {\n    precisionstring += \"\\n#define MEDIUM_PRECISION\";\n  } else if (parameters.precision === \"lowp\") {\n    precisionstring += \"\\n#define LOW_PRECISION\";\n  }\n\n  return precisionstring;\n}\n\nfunction generateShadowMapTypeDefine(parameters) {\n  var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n  if (parameters.shadowMapType === PCFShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n  } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n  } else if (parameters.shadowMapType === VSMShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n  }\n\n  return shadowMapTypeDefine;\n}\n\nfunction generateEnvMapTypeDefine(parameters) {\n  var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeReflectionMapping:\n      case CubeRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n        break;\n\n      case CubeUVReflectionMapping:\n      case CubeUVRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n        break;\n    }\n  }\n\n  return envMapTypeDefine;\n}\n\nfunction generateEnvMapModeDefine(parameters) {\n  var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeRefractionMapping:\n      case CubeUVRefractionMapping:\n        envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n        break;\n    }\n  }\n\n  return envMapModeDefine;\n}\n\nfunction generateEnvMapBlendingDefine(parameters) {\n  var envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n  if (parameters.envMap) {\n    switch (parameters.combine) {\n      case MultiplyOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n        break;\n\n      case MixOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n        break;\n\n      case AddOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n        break;\n    }\n  }\n\n  return envMapBlendingDefine;\n}\n\nfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n  var gl = renderer.getContext();\n  var defines = parameters.defines;\n  var vertexShader = parameters.vertexShader;\n  var fragmentShader = parameters.fragmentShader;\n  var shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n  var envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n  var envMapModeDefine = generateEnvMapModeDefine(parameters);\n  var envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n  var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n  var customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n  var customDefines = generateDefines(defines);\n  var program = gl.createProgram();\n  var prefixVertex, prefixFragment;\n  var versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + \"\\n\" : '';\n\n  if (parameters.isRawShaderMaterial) {\n    prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n    if (prefixVertex.length > 0) {\n      prefixVertex += '\\n';\n    }\n\n    prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n    if (prefixFragment.length > 0) {\n      prefixFragment += '\\n';\n    }\n  } else {\n    prefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n    prefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n    '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n    parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n    parameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n  }\n\n  vertexShader = resolveIncludes(vertexShader);\n  vertexShader = replaceLightNums(vertexShader, parameters);\n  vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n  fragmentShader = resolveIncludes(fragmentShader);\n  fragmentShader = replaceLightNums(fragmentShader, parameters);\n  fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n  vertexShader = unrollLoops(vertexShader);\n  fragmentShader = unrollLoops(fragmentShader);\n\n  if (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n    // GLSL 3.0 conversion for built-in materials and ShaderMaterial\n    versionString = '#version 300 es\\n';\n    prefixVertex = ['#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n    prefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n  }\n\n  var vertexGlsl = versionString + prefixVertex + vertexShader;\n  var fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n  // console.log( '*FRAGMENT*', fragmentGlsl );\n\n  var glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n  var glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n  gl.attachShader(program, glVertexShader);\n  gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n  if (parameters.index0AttributeName !== undefined) {\n    gl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n  } else if (parameters.morphTargets === true) {\n    // programs with morphTargets displace position out of attribute 0\n    gl.bindAttribLocation(program, 0, 'position');\n  }\n\n  gl.linkProgram(program); // check for link errors\n\n  if (renderer.debug.checkShaderErrors) {\n    var programLog = gl.getProgramInfoLog(program).trim();\n    var vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n    var fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n    var runnable = true;\n    var haveDiagnostics = true;\n\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n      var vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n      var fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n      console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    }\n  } // Clean up\n  // Crashes in iOS9 and iOS10. #18402\n  // gl.detachShader( program, glVertexShader );\n  // gl.detachShader( program, glFragmentShader );\n\n\n  gl.deleteShader(glVertexShader);\n  gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n  var cachedUniforms;\n\n  this.getUniforms = function () {\n    if (cachedUniforms === undefined) {\n      cachedUniforms = new WebGLUniforms(gl, program);\n    }\n\n    return cachedUniforms;\n  }; // set up caching for attribute locations\n\n\n  var cachedAttributes;\n\n  this.getAttributes = function () {\n    if (cachedAttributes === undefined) {\n      cachedAttributes = fetchAttributeLocations(gl, program);\n    }\n\n    return cachedAttributes;\n  }; // free resource\n\n\n  this.destroy = function () {\n    bindingStates.releaseStatesOfProgram(this);\n    gl.deleteProgram(program);\n    this.program = undefined;\n  }; //\n\n\n  this.name = parameters.shaderName;\n  this.id = programIdCount++;\n  this.cacheKey = cacheKey;\n  this.usedTimes = 1;\n  this.program = program;\n  this.vertexShader = glVertexShader;\n  this.fragmentShader = glFragmentShader;\n  return this;\n}\n\nexport { WebGLProgram };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/renderers/webgl/WebGLProgram.js"],"names":["WebGLUniforms","WebGLShader","ShaderChunk","NoToneMapping","AddOperation","MixOperation","MultiplyOperation","CubeRefractionMapping","CubeUVRefractionMapping","CubeUVReflectionMapping","CubeReflectionMapping","PCFSoftShadowMap","PCFShadowMap","VSMShadowMap","ACESFilmicToneMapping","CineonToneMapping","CustomToneMapping","ReinhardToneMapping","LinearToneMapping","GammaEncoding","RGBDEncoding","RGBM16Encoding","RGBM7Encoding","RGBEEncoding","sRGBEncoding","LinearEncoding","LogLuvEncoding","GLSL3","programIdCount","addLineNumbers","string","lines","split","i","length","join","getEncodingComponents","encoding","console","warn","getShaderErrors","gl","shader","type","status","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","trim","source","getShaderSource","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","parameters","chunks","extensionDerivatives","envMapCubeUV","bumpMap","tangentSpaceNormalMap","clearcoatNormalMap","flatShading","shaderID","extensionFragDepth","logarithmicDepthBuffer","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","envMap","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","defines","name","value","push","fetchAttributeLocations","program","attributes","n","getProgramParameter","ACTIVE_ATTRIBUTES","info","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","match","include","undefined","Error","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","start","end","snippet","parseInt","generatePrecision","precisionstring","precision","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","combine","WebGLProgram","renderer","cacheKey","bindingStates","getContext","vertexShader","fragmentShader","gammaFactorDefine","gammaFactor","customExtensions","isWebGL2","customDefines","createProgram","prefixVertex","prefixFragment","versionString","glslVersion","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fog","fogExp2","map","lightMap","aoMap","emissiveMap","normalMap","objectSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","transmissionMap","vertexTangents","vertexColors","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","morphTargets","morphNormals","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","alphaTest","matcap","sheen","gradientMap","premultipliedAlpha","physicallyCorrectLights","dithering","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","VERTEX_SHADER","glFragmentShader","FRAGMENT_SHADER","attachShader","index0AttributeName","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","error","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","getUniforms","cachedAttributes","getAttributes","destroy","releaseStatesOfProgram","deleteProgram","id","usedTimes"],"mappings":"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","sourcesContent":["import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, GammaEncoding, RGBDEncoding, RGBM16Encoding, RGBM7Encoding, RGBEEncoding, sRGBEncoding, LinearEncoding, LogLuvEncoding, GLSL3 } from '../../constants.js';\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\tif ( parameters.precision === \"highp\" ) {\n\n\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + \"\\n\" : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n"]},"metadata":{},"sourceType":"module"}