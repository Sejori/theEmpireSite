{"ast":null,"code":"import { LightShadow } from './LightShadow.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\n\nfunction SpotLightShadow() {\n  LightShadow.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n  this.focus = 1;\n}\n\nSpotLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n  constructor: SpotLightShadow,\n  isSpotLightShadow: true,\n  updateMatrices: function updateMatrices(light) {\n    var camera = this.camera;\n    var fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n    var aspect = this.mapSize.width / this.mapSize.height;\n    var far = light.distance || camera.far;\n\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n\n    LightShadow.prototype.updateMatrices.call(this, light);\n  }\n});\nexport { SpotLightShadow };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/lights/SpotLightShadow.js"],"names":["LightShadow","MathUtils","PerspectiveCamera","SpotLightShadow","call","focus","prototype","Object","assign","create","constructor","isSpotLightShadow","updateMatrices","light","camera","fov","RAD2DEG","angle","aspect","mapSize","width","height","far","distance","updateProjectionMatrix"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;AAEA,SAASC,eAAT,GAA2B;AAE1BH,EAAAA,WAAW,CAACI,IAAZ,CAAkB,IAAlB,EAAwB,IAAIF,iBAAJ,CAAuB,EAAvB,EAA2B,CAA3B,EAA8B,GAA9B,EAAmC,GAAnC,CAAxB;AAEA,OAAKG,KAAL,GAAa,CAAb;AAEA;;AAEDF,eAAe,CAACG,SAAhB,GAA4BC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAeT,WAAW,CAACM,SAA3B,CAAf,EAAuD;AAElFI,EAAAA,WAAW,EAAEP,eAFqE;AAIlFQ,EAAAA,iBAAiB,EAAE,IAJ+D;AAMlFC,EAAAA,cAAc,EAAE,wBAAWC,KAAX,EAAmB;AAElC,QAAMC,MAAM,GAAG,KAAKA,MAApB;AAEA,QAAMC,GAAG,GAAGd,SAAS,CAACe,OAAV,GAAoB,CAApB,GAAwBH,KAAK,CAACI,KAA9B,GAAsC,KAAKZ,KAAvD;AACA,QAAMa,MAAM,GAAG,KAAKC,OAAL,CAAaC,KAAb,GAAqB,KAAKD,OAAL,CAAaE,MAAjD;AACA,QAAMC,GAAG,GAAGT,KAAK,CAACU,QAAN,IAAkBT,MAAM,CAACQ,GAArC;;AAEA,QAAKP,GAAG,KAAKD,MAAM,CAACC,GAAf,IAAsBG,MAAM,KAAKJ,MAAM,CAACI,MAAxC,IAAkDI,GAAG,KAAKR,MAAM,CAACQ,GAAtE,EAA4E;AAE3ER,MAAAA,MAAM,CAACC,GAAP,GAAaA,GAAb;AACAD,MAAAA,MAAM,CAACI,MAAP,GAAgBA,MAAhB;AACAJ,MAAAA,MAAM,CAACQ,GAAP,GAAaA,GAAb;AACAR,MAAAA,MAAM,CAACU,sBAAP;AAEA;;AAEDxB,IAAAA,WAAW,CAACM,SAAZ,CAAsBM,cAAtB,CAAqCR,IAArC,CAA2C,IAA3C,EAAiDS,KAAjD;AAEA;AAzBiF,CAAvD,CAA5B;AA8BA,SAASV,eAAT","sourcesContent":["import { LightShadow } from './LightShadow.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\tthis.focus = 1;\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\n\nexport { SpotLightShadow };\n"]},"metadata":{},"sourceType":"module"}