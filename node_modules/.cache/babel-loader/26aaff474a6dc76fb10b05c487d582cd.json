{"ast":null,"code":"/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { ExtrudeBufferGeometry } from './ExtrudeBufferGeometry.js';\n\nclass TextBufferGeometry extends ExtrudeBufferGeometry {\n  constructor(text, parameters) {\n    parameters = parameters || {};\n    var font = parameters.font;\n\n    if (!(font && font.isFont)) {\n      console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n      return new BufferGeometry();\n    }\n\n    var shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n    parameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n    if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n    if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n    if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n    super(shapes, parameters);\n    this.type = 'TextBufferGeometry';\n  }\n\n}\n\nexport { TextBufferGeometry };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/geometries/TextBufferGeometry.js"],"names":["BufferGeometry","ExtrudeBufferGeometry","TextBufferGeometry","constructor","text","parameters","font","isFont","console","error","shapes","generateShapes","size","depth","height","undefined","bevelThickness","bevelSize","bevelEnabled","type"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,cAAT,QAA+B,2BAA/B;AACA,SAASC,qBAAT,QAAsC,4BAAtC;;AAEA,MAAMC,kBAAN,SAAiCD,qBAAjC,CAAuD;AAEtDE,EAAAA,WAAW,CAAEC,IAAF,EAAQC,UAAR,EAAqB;AAE/BA,IAAAA,UAAU,GAAGA,UAAU,IAAI,EAA3B;AAEA,QAAMC,IAAI,GAAGD,UAAU,CAACC,IAAxB;;AAEA,QAAK,EAAIA,IAAI,IAAIA,IAAI,CAACC,MAAjB,CAAL,EAAiC;AAEhCC,MAAAA,OAAO,CAACC,KAAR,CAAe,sEAAf;AACA,aAAO,IAAIT,cAAJ,EAAP;AAEA;;AAED,QAAMU,MAAM,GAAGJ,IAAI,CAACK,cAAL,CAAqBP,IAArB,EAA2BC,UAAU,CAACO,IAAtC,CAAf,CAb+B,CAe/B;;AAEAP,IAAAA,UAAU,CAACQ,KAAX,GAAmBR,UAAU,CAACS,MAAX,KAAsBC,SAAtB,GAAkCV,UAAU,CAACS,MAA7C,GAAsD,EAAzE,CAjB+B,CAmB/B;;AAEA,QAAKT,UAAU,CAACW,cAAX,KAA8BD,SAAnC,EAA+CV,UAAU,CAACW,cAAX,GAA4B,EAA5B;AAC/C,QAAKX,UAAU,CAACY,SAAX,KAAyBF,SAA9B,EAA0CV,UAAU,CAACY,SAAX,GAAuB,CAAvB;AAC1C,QAAKZ,UAAU,CAACa,YAAX,KAA4BH,SAAjC,EAA6CV,UAAU,CAACa,YAAX,GAA0B,KAA1B;AAE7C,UAAOR,MAAP,EAAeL,UAAf;AAEA,SAAKc,IAAL,GAAY,oBAAZ;AAEA;;AA/BqD;;AAoCvD,SAASjB,kBAAT","sourcesContent":["/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { ExtrudeBufferGeometry } from './ExtrudeBufferGeometry.js';\n\nclass TextBufferGeometry extends ExtrudeBufferGeometry {\n\n\tconstructor( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tconst font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tsuper( shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n}\n\n\nexport { TextBufferGeometry };\n"]},"metadata":{},"sourceType":"module"}