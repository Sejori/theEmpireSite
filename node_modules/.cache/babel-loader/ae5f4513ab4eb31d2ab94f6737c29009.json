{"ast":null,"code":"import { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\nvar fov = 90,\n    aspect = 1;\n\nfunction CubeCamera(near, far, renderTarget) {\n  Object3D.call(this);\n  this.type = 'CubeCamera';\n\n  if (renderTarget.isWebGLCubeRenderTarget !== true) {\n    console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n    return;\n  }\n\n  this.renderTarget = renderTarget;\n  var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPX.layers = this.layers;\n  cameraPX.up.set(0, -1, 0);\n  cameraPX.lookAt(new Vector3(1, 0, 0));\n  this.add(cameraPX);\n  var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNX.layers = this.layers;\n  cameraNX.up.set(0, -1, 0);\n  cameraNX.lookAt(new Vector3(-1, 0, 0));\n  this.add(cameraNX);\n  var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPY.layers = this.layers;\n  cameraPY.up.set(0, 0, 1);\n  cameraPY.lookAt(new Vector3(0, 1, 0));\n  this.add(cameraPY);\n  var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNY.layers = this.layers;\n  cameraNY.up.set(0, 0, -1);\n  cameraNY.lookAt(new Vector3(0, -1, 0));\n  this.add(cameraNY);\n  var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPZ.layers = this.layers;\n  cameraPZ.up.set(0, -1, 0);\n  cameraPZ.lookAt(new Vector3(0, 0, 1));\n  this.add(cameraPZ);\n  var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNZ.layers = this.layers;\n  cameraNZ.up.set(0, -1, 0);\n  cameraNZ.lookAt(new Vector3(0, 0, -1));\n  this.add(cameraNZ);\n\n  this.update = function (renderer, scene) {\n    if (this.parent === null) this.updateMatrixWorld();\n    var currentXrEnabled = renderer.xr.enabled;\n    var currentRenderTarget = renderer.getRenderTarget();\n    renderer.xr.enabled = false;\n    var generateMipmaps = renderTarget.texture.generateMipmaps;\n    renderTarget.texture.generateMipmaps = false;\n    renderer.setRenderTarget(renderTarget, 0);\n    renderer.render(scene, cameraPX);\n    renderer.setRenderTarget(renderTarget, 1);\n    renderer.render(scene, cameraNX);\n    renderer.setRenderTarget(renderTarget, 2);\n    renderer.render(scene, cameraPY);\n    renderer.setRenderTarget(renderTarget, 3);\n    renderer.render(scene, cameraNY);\n    renderer.setRenderTarget(renderTarget, 4);\n    renderer.render(scene, cameraPZ);\n    renderTarget.texture.generateMipmaps = generateMipmaps;\n    renderer.setRenderTarget(renderTarget, 5);\n    renderer.render(scene, cameraNZ);\n    renderer.setRenderTarget(currentRenderTarget);\n    renderer.xr.enabled = currentXrEnabled;\n  };\n\n  this.clear = function (renderer, color, depth, stencil) {\n    var currentRenderTarget = renderer.getRenderTarget();\n\n    for (var i = 0; i < 6; i++) {\n      renderer.setRenderTarget(renderTarget, i);\n      renderer.clear(color, depth, stencil);\n    }\n\n    renderer.setRenderTarget(currentRenderTarget);\n  };\n}\n\nCubeCamera.prototype = Object.create(Object3D.prototype);\nCubeCamera.prototype.constructor = CubeCamera;\nexport { CubeCamera };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/cameras/CubeCamera.js"],"names":["Object3D","Vector3","PerspectiveCamera","fov","aspect","CubeCamera","near","far","renderTarget","call","type","isWebGLCubeRenderTarget","console","error","cameraPX","layers","up","set","lookAt","add","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","update","renderer","scene","parent","updateMatrixWorld","currentXrEnabled","xr","enabled","currentRenderTarget","getRenderTarget","generateMipmaps","texture","setRenderTarget","render","clear","color","depth","stencil","i","prototype","Object","create","constructor"],"mappings":"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","sourcesContent":["import { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nconst fov = 90, aspect = 1;\n\nfunction CubeCamera( near, far, renderTarget ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\treturn;\n\n\t}\n\n\tthis.renderTarget = renderTarget;\n\n\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.layers = this.layers;\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.layers = this.layers;\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.layers = this.layers;\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.layers = this.layers;\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.layers = this.layers;\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.layers = this.layers;\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n\nexport { CubeCamera };\n"]},"metadata":{},"sourceType":"module"}