{"ast":null,"code":"import { Color } from '../math/Color.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\nimport * as Materials from '../materials/Materials.js';\n\nfunction MaterialLoader(manager) {\n  Loader.call(this, manager);\n  this.textures = {};\n}\n\nMaterialLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: MaterialLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(JSON.parse(text)));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function parse(json) {\n    var textures = this.textures;\n\n    function getTexture(name) {\n      if (textures[name] === undefined) {\n        console.warn('THREE.MaterialLoader: Undefined texture', name);\n      }\n\n      return textures[name];\n    }\n\n    var material = new Materials[json.type]();\n    if (json.uuid !== undefined) material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined) material.color.setHex(json.color);\n    if (json.roughness !== undefined) material.roughness = json.roughness;\n    if (json.metalness !== undefined) material.metalness = json.metalness;\n    if (json.sheen !== undefined) material.sheen = new Color().setHex(json.sheen);\n    if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n    if (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n    if (json.fog !== undefined) material.fog = json.fog;\n    if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.combine !== undefined) material.combine = json.combine;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n    if (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n    if (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n    if (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n    if (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n    if (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n    if (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n    if (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n    if (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n    if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n    if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n    if (json.rotation !== undefined) material.rotation = json.rotation;\n    if (json.linewidth !== 1) material.linewidth = json.linewidth;\n    if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n    if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n    if (json.scale !== undefined) material.scale = json.scale;\n    if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n    if (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n    if (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n    if (json.skinning !== undefined) material.skinning = json.skinning;\n    if (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n    if (json.morphNormals !== undefined) material.morphNormals = json.morphNormals;\n    if (json.dithering !== undefined) material.dithering = json.dithering;\n    if (json.vertexTangents !== undefined) material.vertexTangents = json.vertexTangents;\n    if (json.visible !== undefined) material.visible = json.visible;\n    if (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n    if (json.userData !== undefined) material.userData = json.userData;\n\n    if (json.vertexColors !== undefined) {\n      if (typeof json.vertexColors === 'number') {\n        material.vertexColors = json.vertexColors > 0 ? true : false;\n      } else {\n        material.vertexColors = json.vertexColors;\n      }\n    } // Shader Material\n\n\n    if (json.uniforms !== undefined) {\n      for (var name in json.uniforms) {\n        var uniform = json.uniforms[name];\n        material.uniforms[name] = {};\n\n        switch (uniform.type) {\n          case 't':\n            material.uniforms[name].value = getTexture(uniform.value);\n            break;\n\n          case 'c':\n            material.uniforms[name].value = new Color().setHex(uniform.value);\n            break;\n\n          case 'v2':\n            material.uniforms[name].value = new Vector2().fromArray(uniform.value);\n            break;\n\n          case 'v3':\n            material.uniforms[name].value = new Vector3().fromArray(uniform.value);\n            break;\n\n          case 'v4':\n            material.uniforms[name].value = new Vector4().fromArray(uniform.value);\n            break;\n\n          case 'm3':\n            material.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n            break;\n\n          case 'm4':\n            material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n            break;\n\n          default:\n            material.uniforms[name].value = uniform.value;\n        }\n      }\n    }\n\n    if (json.defines !== undefined) material.defines = json.defines;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n    if (json.extensions !== undefined) {\n      for (var key in json.extensions) {\n        material.extensions[key] = json.extensions[key];\n      }\n    } // Deprecated\n\n\n    if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n    // for PointsMaterial\n\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n    if (json.map !== undefined) material.map = getTexture(json.map);\n    if (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n    if (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n    if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n    if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n    if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n    if (json.normalScale !== undefined) {\n      var normalScale = json.normalScale;\n\n      if (Array.isArray(normalScale) === false) {\n        // Blender exporter used to export a scalar. See #7459\n        normalScale = [normalScale, normalScale];\n      }\n\n      material.normalScale = new Vector2().fromArray(normalScale);\n    }\n\n    if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n    if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n    if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n    if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n    if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n    if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n    if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n    if (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n    if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n    if (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n    if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n    if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n    if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n    if (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n    if (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n    if (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n    if (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n    if (json.transmission !== undefined) material.transmission = json.transmission;\n    if (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n    return material;\n  },\n  setTextures: function setTextures(value) {\n    this.textures = value;\n    return this;\n  }\n});\nexport { MaterialLoader };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/loaders/MaterialLoader.js"],"names":["Color","Vector2","Vector3","Vector4","Matrix3","Matrix4","FileLoader","Loader","Materials","MaterialLoader","manager","call","textures","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","JSON","e","console","error","itemError","json","getTexture","name","undefined","warn","material","type","uuid","color","setHex","roughness","metalness","sheen","emissive","specular","shininess","clearcoat","clearcoatRoughness","fog","flatShading","blending","combine","side","opacity","transparent","alphaTest","depthTest","depthWrite","colorWrite","stencilWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","rotation","linewidth","dashSize","gapSize","scale","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","skinning","morphTargets","morphNormals","dithering","vertexTangents","visible","toneMapped","userData","vertexColors","uniforms","uniform","value","fromArray","defines","vertexShader","fragmentShader","extensions","key","shading","size","sizeAttenuation","map","matcap","alphaMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","Array","isArray","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","emissiveIntensity","specularMap","envMap","envMapIntensity","reflectivity","refractionRatio","lightMap","lightMapIntensity","aoMap","aoMapIntensity","gradientMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","transmission","transmissionMap","setTextures"],"mappings":"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","sourcesContent":["import { Color } from '../math/Color.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\nimport * as Materials from '../materials/Materials.js';\n\nfunction MaterialLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.textures = {};\n\n}\n\nMaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: MaterialLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.vertexTangents !== undefined ) material.vertexTangents = json.vertexTangents;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { MaterialLoader };\n"]},"metadata":{},"sourceType":"module"}