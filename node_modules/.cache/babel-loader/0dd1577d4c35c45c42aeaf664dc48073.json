{"ast":null,"code":"import { RGBFormat, LinearFilter } from '../constants.js';\nimport { Texture } from './Texture.js';\n\nfunction VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.format = format !== undefined ? format : RGBFormat;\n  this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n  this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n  this.generateMipmaps = false;\n  var scope = this;\n\n  function updateVideo() {\n    scope.needsUpdate = true;\n    video.requestVideoFrameCallback(updateVideo);\n  }\n\n  if ('requestVideoFrameCallback' in video) {\n    video.requestVideoFrameCallback(updateVideo);\n  }\n}\n\nVideoTexture.prototype = Object.assign(Object.create(Texture.prototype), {\n  constructor: VideoTexture,\n  isVideoTexture: true,\n  update: function update() {\n    var video = this.image;\n    var hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n    if (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n      this.needsUpdate = true;\n    }\n  }\n});\nexport { VideoTexture };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/textures/VideoTexture.js"],"names":["RGBFormat","LinearFilter","Texture","VideoTexture","video","mapping","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","call","undefined","generateMipmaps","scope","updateVideo","needsUpdate","requestVideoFrameCallback","prototype","Object","assign","create","constructor","isVideoTexture","update","image","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,iBAAxC;AACA,SAASC,OAAT,QAAwB,cAAxB;;AAEA,SAASC,YAAT,CAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,KAAvC,EAA8CC,KAA9C,EAAqDC,SAArD,EAAgEC,SAAhE,EAA2EC,MAA3E,EAAmFC,IAAnF,EAAyFC,UAAzF,EAAsG;AAErGV,EAAAA,OAAO,CAACW,IAAR,CAAc,IAAd,EAAoBT,KAApB,EAA2BC,OAA3B,EAAoCC,KAApC,EAA2CC,KAA3C,EAAkDC,SAAlD,EAA6DC,SAA7D,EAAwEC,MAAxE,EAAgFC,IAAhF,EAAsFC,UAAtF;AAEA,OAAKF,MAAL,GAAcA,MAAM,KAAKI,SAAX,GAAuBJ,MAAvB,GAAgCV,SAA9C;AAEA,OAAKS,SAAL,GAAiBA,SAAS,KAAKK,SAAd,GAA0BL,SAA1B,GAAsCR,YAAvD;AACA,OAAKO,SAAL,GAAiBA,SAAS,KAAKM,SAAd,GAA0BN,SAA1B,GAAsCP,YAAvD;AAEA,OAAKc,eAAL,GAAuB,KAAvB;AAEA,MAAMC,KAAK,GAAG,IAAd;;AAEA,WAASC,WAAT,GAAuB;AAEtBD,IAAAA,KAAK,CAACE,WAAN,GAAoB,IAApB;AACAd,IAAAA,KAAK,CAACe,yBAAN,CAAiCF,WAAjC;AAEA;;AAED,MAAK,+BAA+Bb,KAApC,EAA4C;AAE3CA,IAAAA,KAAK,CAACe,yBAAN,CAAiCF,WAAjC;AAEA;AAED;;AAEDd,YAAY,CAACiB,SAAb,GAAyBC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAerB,OAAO,CAACkB,SAAvB,CAAf,EAAmD;AAE3EI,EAAAA,WAAW,EAAErB,YAF8D;AAI3EsB,EAAAA,cAAc,EAAE,IAJ2D;AAM3EC,EAAAA,MAAM,EAAE,kBAAY;AAEnB,QAAMtB,KAAK,GAAG,KAAKuB,KAAnB;AACA,QAAMC,qBAAqB,IAAG,+BAA+BxB,KAAlC,CAA3B;;AAEA,QAAKwB,qBAAqB,KAAK,KAA1B,IAAmCxB,KAAK,CAACyB,UAAN,IAAoBzB,KAAK,CAAC0B,iBAAlE,EAAsF;AAErF,WAAKZ,WAAL,GAAmB,IAAnB;AAEA;AAED;AAjB0E,CAAnD,CAAzB;AAsBA,SAASf,YAAT","sourcesContent":["import { RGBFormat, LinearFilter } from '../constants.js';\nimport { Texture } from './Texture.js';\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n\tconst scope = this;\n\n\tfunction updateVideo() {\n\n\t\tscope.needsUpdate = true;\n\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t}\n\n\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t}\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n\nexport { VideoTexture };\n"]},"metadata":{},"sourceType":"module"}