{"ast":null,"code":"import { Sphere } from '../math/Sphere.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\nimport { InstancedBufferGeometry } from '../core/InstancedBufferGeometry.js';\nimport { InstancedBufferAttribute } from '../core/InstancedBufferAttribute.js';\nimport { InterleavedBufferAttribute } from '../core/InterleavedBufferAttribute.js';\nimport { InterleavedBuffer } from '../core/InterleavedBuffer.js';\n\nfunction BufferGeometryLoader(manager) {\n  Loader.call(this, manager);\n}\n\nBufferGeometryLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: BufferGeometryLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(JSON.parse(text)));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function parse(json) {\n    var interleavedBufferMap = {};\n    var arrayBufferMap = {};\n\n    function getInterleavedBuffer(json, uuid) {\n      if (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n      var interleavedBuffers = json.interleavedBuffers;\n      var interleavedBuffer = interleavedBuffers[uuid];\n      var buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n      var array = new TYPED_ARRAYS[interleavedBuffer.type](buffer);\n      var ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n      ib.uuid = interleavedBuffer.uuid;\n      interleavedBufferMap[uuid] = ib;\n      return ib;\n    }\n\n    function getArrayBuffer(json, uuid) {\n      if (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n      var arrayBuffers = json.arrayBuffers;\n      var arrayBuffer = arrayBuffers[uuid];\n      var ab = new Uint32Array(arrayBuffer).buffer;\n      arrayBufferMap[uuid] = ab;\n      return ab;\n    }\n\n    var geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n    var index = json.data.index;\n\n    if (index !== undefined) {\n      var typedArray = new TYPED_ARRAYS[index.type](index.array);\n      geometry.setIndex(new BufferAttribute(typedArray, 1));\n    }\n\n    var attributes = json.data.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var bufferAttribute = void 0;\n\n      if (attribute.isInterleavedBufferAttribute) {\n        var interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n        bufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n      } else {\n        var _typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n\n        var bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n        bufferAttribute = new bufferAttributeConstr(_typedArray, attribute.itemSize, attribute.normalized);\n      }\n\n      if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n      geometry.setAttribute(key, bufferAttribute);\n    }\n\n    var morphAttributes = json.data.morphAttributes;\n\n    if (morphAttributes) {\n      for (var _key in morphAttributes) {\n        var attributeArray = morphAttributes[_key];\n        var array = [];\n\n        for (var i = 0, il = attributeArray.length; i < il; i++) {\n          var _attribute = attributeArray[i];\n\n          var _bufferAttribute = void 0;\n\n          if (_attribute.isInterleavedBufferAttribute) {\n            var _interleavedBuffer = getInterleavedBuffer(json.data, _attribute.data);\n\n            _bufferAttribute = new InterleavedBufferAttribute(_interleavedBuffer, _attribute.itemSize, _attribute.offset, _attribute.normalized);\n          } else {\n            var _typedArray2 = new TYPED_ARRAYS[_attribute.type](_attribute.array);\n\n            _bufferAttribute = new BufferAttribute(_typedArray2, _attribute.itemSize, _attribute.normalized);\n          }\n\n          if (_attribute.name !== undefined) _bufferAttribute.name = _attribute.name;\n          array.push(_bufferAttribute);\n        }\n\n        geometry.morphAttributes[_key] = array;\n      }\n    }\n\n    var morphTargetsRelative = json.data.morphTargetsRelative;\n\n    if (morphTargetsRelative) {\n      geometry.morphTargetsRelative = true;\n    }\n\n    var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n    if (groups !== undefined) {\n      for (var _i = 0, n = groups.length; _i !== n; ++_i) {\n        var group = groups[_i];\n        geometry.addGroup(group.start, group.count, group.materialIndex);\n      }\n    }\n\n    var boundingSphere = json.data.boundingSphere;\n\n    if (boundingSphere !== undefined) {\n      var center = new Vector3();\n\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n\n      geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n    }\n\n    if (json.name) geometry.name = json.name;\n    if (json.userData) geometry.userData = json.userData;\n    return geometry;\n  }\n});\nvar TYPED_ARRAYS = {\n  Int8Array: Int8Array,\n  Uint8Array: Uint8Array,\n  // Workaround for IE11 pre KB2929437. See #11440\n  Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n  Int16Array: Int16Array,\n  Uint16Array: Uint16Array,\n  Int32Array: Int32Array,\n  Uint32Array: Uint32Array,\n  Float32Array: Float32Array,\n  Float64Array: Float64Array\n};\nexport { BufferGeometryLoader };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/loaders/BufferGeometryLoader.js"],"names":["Sphere","Vector3","BufferAttribute","BufferGeometry","FileLoader","Loader","InstancedBufferGeometry","InstancedBufferAttribute","InterleavedBufferAttribute","InterleavedBuffer","BufferGeometryLoader","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","JSON","e","console","error","itemError","json","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","uuid","undefined","interleavedBuffers","interleavedBuffer","buffer","getArrayBuffer","array","TYPED_ARRAYS","type","ib","stride","arrayBuffers","arrayBuffer","ab","Uint32Array","geometry","isInstancedBufferGeometry","index","data","typedArray","setIndex","attributes","key","attribute","bufferAttribute","isInterleavedBufferAttribute","itemSize","offset","normalized","bufferAttributeConstr","isInstancedBufferAttribute","name","setAttribute","morphAttributes","attributeArray","i","il","length","push","morphTargetsRelative","groups","drawcalls","offsets","n","group","addGroup","start","count","materialIndex","boundingSphere","center","fromArray","radius","userData","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array"],"mappings":"AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,uBAAT,QAAwC,oCAAxC;AACA,SAASC,wBAAT,QAAyC,qCAAzC;AACA,SAASC,0BAAT,QAA2C,uCAA3C;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,SAASC,oBAAT,CAA+BC,OAA/B,EAAyC;AAExCN,EAAAA,MAAM,CAACO,IAAP,CAAa,IAAb,EAAmBD,OAAnB;AAEA;;AAEDD,oBAAoB,CAACG,SAArB,GAAiCC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAeX,MAAM,CAACQ,SAAtB,CAAf,EAAkD;AAElFI,EAAAA,WAAW,EAAEP,oBAFqE;AAIlFQ,EAAAA,IAAI,EAAE,cAAWC,GAAX,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA8C;AAEnD,QAAMC,KAAK,GAAG,IAAd;AAEA,QAAMC,MAAM,GAAG,IAAIpB,UAAJ,CAAgBmB,KAAK,CAACZ,OAAtB,CAAf;AACAa,IAAAA,MAAM,CAACC,OAAP,CAAgBF,KAAK,CAACG,IAAtB;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAyBJ,KAAK,CAACK,aAA/B;AACAJ,IAAAA,MAAM,CAACK,kBAAP,CAA2BN,KAAK,CAACO,eAAjC;AACAN,IAAAA,MAAM,CAACN,IAAP,CAAaC,GAAb,EAAkB,UAAWY,IAAX,EAAkB;AAEnC,UAAI;AAEHX,QAAAA,MAAM,CAAEG,KAAK,CAACS,KAAN,CAAaC,IAAI,CAACD,KAAL,CAAYD,IAAZ,CAAb,CAAF,CAAN;AAEA,OAJD,CAIE,OAAQG,CAAR,EAAY;AAEb,YAAKZ,OAAL,EAAe;AAEdA,UAAAA,OAAO,CAAEY,CAAF,CAAP;AAEA,SAJD,MAIO;AAENC,UAAAA,OAAO,CAACC,KAAR,CAAeF,CAAf;AAEA;;AAEDX,QAAAA,KAAK,CAACZ,OAAN,CAAc0B,SAAd,CAAyBlB,GAAzB;AAEA;AAED,KAtBD,EAsBGE,UAtBH,EAsBeC,OAtBf;AAwBA,GApCiF;AAsClFU,EAAAA,KAAK,EAAE,eAAWM,IAAX,EAAkB;AAExB,QAAMC,oBAAoB,GAAG,EAA7B;AACA,QAAMC,cAAc,GAAG,EAAvB;;AAEA,aAASC,oBAAT,CAA+BH,IAA/B,EAAqCI,IAArC,EAA4C;AAE3C,UAAKH,oBAAoB,CAAEG,IAAF,CAApB,KAAiCC,SAAtC,EAAkD,OAAOJ,oBAAoB,CAAEG,IAAF,CAA3B;AAElD,UAAME,kBAAkB,GAAGN,IAAI,CAACM,kBAAhC;AACA,UAAMC,iBAAiB,GAAGD,kBAAkB,CAAEF,IAAF,CAA5C;AAEA,UAAMI,MAAM,GAAGC,cAAc,CAAET,IAAF,EAAQO,iBAAiB,CAACC,MAA1B,CAA7B;AAEA,UAAME,KAAK,GAAG,IAAIC,YAAY,CAAEJ,iBAAiB,CAACK,IAApB,CAAhB,CAA4CJ,MAA5C,CAAd;AACA,UAAMK,EAAE,GAAG,IAAI1C,iBAAJ,CAAuBuC,KAAvB,EAA8BH,iBAAiB,CAACO,MAAhD,CAAX;AACAD,MAAAA,EAAE,CAACT,IAAH,GAAUG,iBAAiB,CAACH,IAA5B;AAEAH,MAAAA,oBAAoB,CAAEG,IAAF,CAApB,GAA+BS,EAA/B;AAEA,aAAOA,EAAP;AAEA;;AAED,aAASJ,cAAT,CAAyBT,IAAzB,EAA+BI,IAA/B,EAAsC;AAErC,UAAKF,cAAc,CAAEE,IAAF,CAAd,KAA2BC,SAAhC,EAA4C,OAAOH,cAAc,CAAEE,IAAF,CAArB;AAE5C,UAAMW,YAAY,GAAGf,IAAI,CAACe,YAA1B;AACA,UAAMC,WAAW,GAAGD,YAAY,CAAEX,IAAF,CAAhC;AAEA,UAAMa,EAAE,GAAG,IAAIC,WAAJ,CAAiBF,WAAjB,EAA+BR,MAA1C;AAEAN,MAAAA,cAAc,CAAEE,IAAF,CAAd,GAAyBa,EAAzB;AAEA,aAAOA,EAAP;AAEA;;AAED,QAAME,QAAQ,GAAGnB,IAAI,CAACoB,yBAAL,GAAiC,IAAIpD,uBAAJ,EAAjC,GAAiE,IAAIH,cAAJ,EAAlF;AAEA,QAAMwD,KAAK,GAAGrB,IAAI,CAACsB,IAAL,CAAUD,KAAxB;;AAEA,QAAKA,KAAK,KAAKhB,SAAf,EAA2B;AAE1B,UAAMkB,UAAU,GAAG,IAAIZ,YAAY,CAAEU,KAAK,CAACT,IAAR,CAAhB,CAAgCS,KAAK,CAACX,KAAtC,CAAnB;AACAS,MAAAA,QAAQ,CAACK,QAAT,CAAmB,IAAI5D,eAAJ,CAAqB2D,UAArB,EAAiC,CAAjC,CAAnB;AAEA;;AAED,QAAME,UAAU,GAAGzB,IAAI,CAACsB,IAAL,CAAUG,UAA7B;;AAEA,SAAM,IAAMC,GAAZ,IAAmBD,UAAnB,EAAgC;AAE/B,UAAME,SAAS,GAAGF,UAAU,CAAEC,GAAF,CAA5B;AACA,UAAIE,eAAe,SAAnB;;AAEA,UAAKD,SAAS,CAACE,4BAAf,EAA8C;AAE7C,YAAMtB,iBAAiB,GAAGJ,oBAAoB,CAAEH,IAAI,CAACsB,IAAP,EAAaK,SAAS,CAACL,IAAvB,CAA9C;AACAM,QAAAA,eAAe,GAAG,IAAI1D,0BAAJ,CAAgCqC,iBAAhC,EAAmDoB,SAAS,CAACG,QAA7D,EAAuEH,SAAS,CAACI,MAAjF,EAAyFJ,SAAS,CAACK,UAAnG,CAAlB;AAEA,OALD,MAKO;AAEN,YAAMT,WAAU,GAAG,IAAIZ,YAAY,CAAEgB,SAAS,CAACf,IAAZ,CAAhB,CAAoCe,SAAS,CAACjB,KAA9C,CAAnB;;AACA,YAAMuB,qBAAqB,GAAGN,SAAS,CAACO,0BAAV,GAAuCjE,wBAAvC,GAAkEL,eAAhG;AACAgE,QAAAA,eAAe,GAAG,IAAIK,qBAAJ,CAA2BV,WAA3B,EAAuCI,SAAS,CAACG,QAAjD,EAA2DH,SAAS,CAACK,UAArE,CAAlB;AAEA;;AAED,UAAKL,SAAS,CAACQ,IAAV,KAAmB9B,SAAxB,EAAoCuB,eAAe,CAACO,IAAhB,GAAuBR,SAAS,CAACQ,IAAjC;AACpChB,MAAAA,QAAQ,CAACiB,YAAT,CAAuBV,GAAvB,EAA4BE,eAA5B;AAEA;;AAED,QAAMS,eAAe,GAAGrC,IAAI,CAACsB,IAAL,CAAUe,eAAlC;;AAEA,QAAKA,eAAL,EAAuB;AAEtB,WAAM,IAAMX,IAAZ,IAAmBW,eAAnB,EAAqC;AAEpC,YAAMC,cAAc,GAAGD,eAAe,CAAEX,IAAF,CAAtC;AAEA,YAAMhB,KAAK,GAAG,EAAd;;AAEA,aAAM,IAAI6B,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGF,cAAc,CAACG,MAArC,EAA6CF,CAAC,GAAGC,EAAjD,EAAqDD,CAAC,EAAtD,EAA4D;AAE3D,cAAMZ,UAAS,GAAGW,cAAc,CAAEC,CAAF,CAAhC;;AACA,cAAIX,gBAAe,SAAnB;;AAEA,cAAKD,UAAS,CAACE,4BAAf,EAA8C;AAE7C,gBAAMtB,kBAAiB,GAAGJ,oBAAoB,CAAEH,IAAI,CAACsB,IAAP,EAAaK,UAAS,CAACL,IAAvB,CAA9C;;AACAM,YAAAA,gBAAe,GAAG,IAAI1D,0BAAJ,CAAgCqC,kBAAhC,EAAmDoB,UAAS,CAACG,QAA7D,EAAuEH,UAAS,CAACI,MAAjF,EAAyFJ,UAAS,CAACK,UAAnG,CAAlB;AAEA,WALD,MAKO;AAEN,gBAAMT,YAAU,GAAG,IAAIZ,YAAY,CAAEgB,UAAS,CAACf,IAAZ,CAAhB,CAAoCe,UAAS,CAACjB,KAA9C,CAAnB;;AACAkB,YAAAA,gBAAe,GAAG,IAAIhE,eAAJ,CAAqB2D,YAArB,EAAiCI,UAAS,CAACG,QAA3C,EAAqDH,UAAS,CAACK,UAA/D,CAAlB;AAEA;;AAED,cAAKL,UAAS,CAACQ,IAAV,KAAmB9B,SAAxB,EAAoCuB,gBAAe,CAACO,IAAhB,GAAuBR,UAAS,CAACQ,IAAjC;AACpCzB,UAAAA,KAAK,CAACgC,IAAN,CAAYd,gBAAZ;AAEA;;AAEDT,QAAAA,QAAQ,CAACkB,eAAT,CAA0BX,IAA1B,IAAkChB,KAAlC;AAEA;AAED;;AAED,QAAMiC,oBAAoB,GAAG3C,IAAI,CAACsB,IAAL,CAAUqB,oBAAvC;;AAEA,QAAKA,oBAAL,EAA4B;AAE3BxB,MAAAA,QAAQ,CAACwB,oBAAT,GAAgC,IAAhC;AAEA;;AAED,QAAMC,MAAM,GAAG5C,IAAI,CAACsB,IAAL,CAAUsB,MAAV,IAAoB5C,IAAI,CAACsB,IAAL,CAAUuB,SAA9B,IAA2C7C,IAAI,CAACsB,IAAL,CAAUwB,OAApE;;AAEA,QAAKF,MAAM,KAAKvC,SAAhB,EAA4B;AAE3B,WAAM,IAAIkC,EAAC,GAAG,CAAR,EAAWQ,CAAC,GAAGH,MAAM,CAACH,MAA5B,EAAoCF,EAAC,KAAKQ,CAA1C,EAA6C,EAAGR,EAAhD,EAAoD;AAEnD,YAAMS,KAAK,GAAGJ,MAAM,CAAEL,EAAF,CAApB;AAEApB,QAAAA,QAAQ,CAAC8B,QAAT,CAAmBD,KAAK,CAACE,KAAzB,EAAgCF,KAAK,CAACG,KAAtC,EAA6CH,KAAK,CAACI,aAAnD;AAEA;AAED;;AAED,QAAMC,cAAc,GAAGrD,IAAI,CAACsB,IAAL,CAAU+B,cAAjC;;AAEA,QAAKA,cAAc,KAAKhD,SAAxB,EAAoC;AAEnC,UAAMiD,MAAM,GAAG,IAAI3F,OAAJ,EAAf;;AAEA,UAAK0F,cAAc,CAACC,MAAf,KAA0BjD,SAA/B,EAA2C;AAE1CiD,QAAAA,MAAM,CAACC,SAAP,CAAkBF,cAAc,CAACC,MAAjC;AAEA;;AAEDnC,MAAAA,QAAQ,CAACkC,cAAT,GAA0B,IAAI3F,MAAJ,CAAY4F,MAAZ,EAAoBD,cAAc,CAACG,MAAnC,CAA1B;AAEA;;AAED,QAAKxD,IAAI,CAACmC,IAAV,EAAiBhB,QAAQ,CAACgB,IAAT,GAAgBnC,IAAI,CAACmC,IAArB;AACjB,QAAKnC,IAAI,CAACyD,QAAV,EAAqBtC,QAAQ,CAACsC,QAAT,GAAoBzD,IAAI,CAACyD,QAAzB;AAErB,WAAOtC,QAAP;AAEA;AAlMiF,CAAlD,CAAjC;AAsMA,IAAMR,YAAY,GAAG;AACpB+C,EAAAA,SAAS,EAAEA,SADS;AAEpBC,EAAAA,UAAU,EAAEA,UAFQ;AAGpB;AACAC,EAAAA,iBAAiB,EAAE,OAAOA,iBAAP,KAA6B,WAA7B,GAA2CA,iBAA3C,GAA+DD,UAJ9D;AAKpBE,EAAAA,UAAU,EAAEA,UALQ;AAMpBC,EAAAA,WAAW,EAAEA,WANO;AAOpBC,EAAAA,UAAU,EAAEA,UAPQ;AAQpB7C,EAAAA,WAAW,EAAEA,WARO;AASpB8C,EAAAA,YAAY,EAAEA,YATM;AAUpBC,EAAAA,YAAY,EAAEA;AAVM,CAArB;AAaA,SAAS7F,oBAAT","sourcesContent":["import { Sphere } from '../math/Sphere.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\nimport { InstancedBufferGeometry } from '../core/InstancedBufferGeometry.js';\nimport { InstancedBufferAttribute } from '../core/InstancedBufferAttribute.js';\nimport { InterleavedBufferAttribute } from '../core/InterleavedBufferAttribute.js';\nimport { InterleavedBuffer } from '../core/InterleavedBuffer.js';\n\nfunction BufferGeometryLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: BufferGeometryLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = new TYPED_ARRAYS[ interleavedBuffer.type ]( buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nexport { BufferGeometryLoader };\n"]},"metadata":{},"sourceType":"module"}