{"ast":null,"code":"import { AudioContext } from '../audio/AudioContext.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\n\nfunction AudioLoader(manager) {\n  Loader.call(this, manager);\n}\n\nAudioLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: AudioLoader,\n  load: function load(url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setResponseType('arraybuffer');\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        // Create a copy of the buffer. The `decodeAudioData` method\n        // detaches the buffer when complete, preventing reuse.\n        var bufferCopy = buffer.slice(0);\n        var context = AudioContext.getContext();\n        context.decodeAudioData(bufferCopy, function (audioBuffer) {\n          onLoad(audioBuffer);\n        });\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n});\nexport { AudioLoader };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/loaders/AudioLoader.js"],"names":["AudioContext","FileLoader","Loader","AudioLoader","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setResponseType","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","bufferCopy","slice","context","getContext","decodeAudioData","audioBuffer","e","console","error","itemError"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,SAASC,WAAT,CAAsBC,OAAtB,EAAgC;AAE/BF,EAAAA,MAAM,CAACG,IAAP,CAAa,IAAb,EAAmBD,OAAnB;AAEA;;AAEDD,WAAW,CAACG,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAeP,MAAM,CAACI,SAAtB,CAAf,EAAkD;AAEzEI,EAAAA,WAAW,EAAEP,WAF4D;AAIzEQ,EAAAA,IAAI,EAAE,cAAWC,GAAX,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA8C;AAEnD,QAAMC,KAAK,GAAG,IAAd;AAEA,QAAMC,MAAM,GAAG,IAAIhB,UAAJ,CAAgBe,KAAK,CAACZ,OAAtB,CAAf;AACAa,IAAAA,MAAM,CAACC,eAAP,CAAwB,aAAxB;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAgBH,KAAK,CAACI,IAAtB;AACAH,IAAAA,MAAM,CAACI,gBAAP,CAAyBL,KAAK,CAACM,aAA/B;AACAL,IAAAA,MAAM,CAACM,kBAAP,CAA2BP,KAAK,CAACQ,eAAjC;AACAP,IAAAA,MAAM,CAACN,IAAP,CAAaC,GAAb,EAAkB,UAAWa,MAAX,EAAoB;AAErC,UAAI;AAEH;AACA;AACA,YAAMC,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAc,CAAd,CAAnB;AAEA,YAAMC,OAAO,GAAG5B,YAAY,CAAC6B,UAAb,EAAhB;AACAD,QAAAA,OAAO,CAACE,eAAR,CAAyBJ,UAAzB,EAAqC,UAAWK,WAAX,EAAyB;AAE7DlB,UAAAA,MAAM,CAAEkB,WAAF,CAAN;AAEA,SAJD;AAMA,OAbD,CAaE,OAAQC,CAAR,EAAY;AAEb,YAAKjB,OAAL,EAAe;AAEdA,UAAAA,OAAO,CAAEiB,CAAF,CAAP;AAEA,SAJD,MAIO;AAENC,UAAAA,OAAO,CAACC,KAAR,CAAeF,CAAf;AAEA;;AAEDhB,QAAAA,KAAK,CAACZ,OAAN,CAAc+B,SAAd,CAAyBvB,GAAzB;AAEA;AAED,KA/BD,EA+BGE,UA/BH,EA+BeC,OA/Bf;AAiCA;AA9CwE,CAAlD,CAAxB;AAmDA,SAASZ,WAAT","sourcesContent":["import { AudioContext } from '../audio/AudioContext.js';\nimport { FileLoader } from './FileLoader.js';\nimport { Loader } from './Loader.js';\n\nfunction AudioLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: AudioLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n\nexport { AudioLoader };\n"]},"metadata":{},"sourceType":"module"}