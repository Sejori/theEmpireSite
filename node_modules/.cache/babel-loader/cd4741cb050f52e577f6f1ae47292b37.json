{"ast":null,"code":"import { Geometry } from '../core/Geometry.js';\nimport { ShapeBufferGeometry } from './ShapeBufferGeometry.js';\n\nclass ShapeGeometry extends Geometry {\n  constructor(shapes, curveSegments) {\n    super();\n    this.type = 'ShapeGeometry';\n\n    if (typeof curveSegments === 'object') {\n      console.warn('THREE.ShapeGeometry: Options parameter has been removed.');\n      curveSegments = curveSegments.curveSegments;\n    }\n\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n    this.fromBufferGeometry(new ShapeBufferGeometry(shapes, curveSegments));\n    this.mergeVertices();\n  }\n\n  toJSON() {\n    var data = Geometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    return toJSON(shapes, data);\n  }\n\n}\n\nfunction toJSON(shapes, data) {\n  data.shapes = [];\n\n  if (Array.isArray(shapes)) {\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      var shape = shapes[i];\n      data.shapes.push(shape.uuid);\n    }\n  } else {\n    data.shapes.push(shapes.uuid);\n  }\n\n  return data;\n}\n\nexport { ShapeGeometry };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/geometries/ShapeGeometry.js"],"names":["Geometry","ShapeBufferGeometry","ShapeGeometry","constructor","shapes","curveSegments","type","console","warn","parameters","fromBufferGeometry","mergeVertices","toJSON","data","prototype","call","Array","isArray","i","l","length","shape","push","uuid"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,aAAN,SAA4BF,QAA5B,CAAqC;AAEpCG,EAAAA,WAAW,CAAEC,MAAF,EAAUC,aAAV,EAA0B;AAEpC;AACA,SAAKC,IAAL,GAAY,eAAZ;;AAEA,QAAK,OAAOD,aAAP,KAAyB,QAA9B,EAAyC;AAExCE,MAAAA,OAAO,CAACC,IAAR,CAAc,0DAAd;AAEAH,MAAAA,aAAa,GAAGA,aAAa,CAACA,aAA9B;AAEA;;AAED,SAAKI,UAAL,GAAkB;AACjBL,MAAAA,MAAM,EAAEA,MADS;AAEjBC,MAAAA,aAAa,EAAEA;AAFE,KAAlB;AAKA,SAAKK,kBAAL,CAAyB,IAAIT,mBAAJ,CAAyBG,MAAzB,EAAiCC,aAAjC,CAAzB;AACA,SAAKM,aAAL;AAEA;;AAEDC,EAAAA,MAAM,GAAG;AAER,QAAMC,IAAI,GAAGb,QAAQ,CAACc,SAAT,CAAmBF,MAAnB,CAA0BG,IAA1B,CAAgC,IAAhC,CAAb;AAEA,QAAMX,MAAM,GAAG,KAAKK,UAAL,CAAgBL,MAA/B;AAEA,WAAOQ,MAAM,CAAER,MAAF,EAAUS,IAAV,CAAb;AAEA;;AAjCmC;;AAqCrC,SAASD,MAAT,CAAiBR,MAAjB,EAAyBS,IAAzB,EAAgC;AAE/BA,EAAAA,IAAI,CAACT,MAAL,GAAc,EAAd;;AAEA,MAAKY,KAAK,CAACC,OAAN,CAAeb,MAAf,CAAL,EAA+B;AAE9B,SAAM,IAAIc,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGf,MAAM,CAACgB,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAkD;AAEjD,UAAMG,KAAK,GAAGjB,MAAM,CAAEc,CAAF,CAApB;AAEAL,MAAAA,IAAI,CAACT,MAAL,CAAYkB,IAAZ,CAAkBD,KAAK,CAACE,IAAxB;AAEA;AAED,GAVD,MAUO;AAENV,IAAAA,IAAI,CAACT,MAAL,CAAYkB,IAAZ,CAAkBlB,MAAM,CAACmB,IAAzB;AAEA;;AAED,SAAOV,IAAP;AAEA;;AAED,SAASX,aAAT","sourcesContent":["import { Geometry } from '../core/Geometry.js';\nimport { ShapeBufferGeometry } from './ShapeBufferGeometry.js';\n\nclass ShapeGeometry extends Geometry {\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = Geometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nexport { ShapeGeometry };\n"]},"metadata":{},"sourceType":"module"}