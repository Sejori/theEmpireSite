{"ast":null,"code":"import { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LightProbe } from './LightProbe.js';\n\nfunction HemisphereLightProbe(skyColor, groundColor, intensity) {\n  LightProbe.call(this, undefined, intensity);\n  var color1 = new Color().set(skyColor);\n  var color2 = new Color().set(groundColor);\n  var sky = new Vector3(color1.r, color1.g, color1.b);\n  var ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n  var c0 = Math.sqrt(Math.PI);\n  var c1 = c0 * Math.sqrt(0.75);\n  this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n  this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n}\n\nHemisphereLightProbe.prototype = Object.assign(Object.create(LightProbe.prototype), {\n  constructor: HemisphereLightProbe,\n  isHemisphereLightProbe: true,\n  copy: function copy(source) {\n    // modifying colors not currently supported\n    LightProbe.prototype.copy.call(this, source);\n    return this;\n  },\n  toJSON: function toJSON(meta) {\n    var data = LightProbe.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n    return data;\n  }\n});\nexport { HemisphereLightProbe };","map":{"version":3,"sources":["/Users/sebringrose/Projects/theEmpire/website/client/node_modules/three/src/lights/HemisphereLightProbe.js"],"names":["Color","Vector3","LightProbe","HemisphereLightProbe","skyColor","groundColor","intensity","call","undefined","color1","set","color2","sky","r","g","b","ground","c0","Math","sqrt","PI","c1","sh","coefficients","copy","add","multiplyScalar","sub","prototype","Object","assign","create","constructor","isHemisphereLightProbe","source","toJSON","meta","data"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,SAASC,oBAAT,CAA+BC,QAA/B,EAAyCC,WAAzC,EAAsDC,SAAtD,EAAkE;AAEjEJ,EAAAA,UAAU,CAACK,IAAX,CAAiB,IAAjB,EAAuBC,SAAvB,EAAkCF,SAAlC;AAEA,MAAMG,MAAM,GAAG,IAAIT,KAAJ,GAAYU,GAAZ,CAAiBN,QAAjB,CAAf;AACA,MAAMO,MAAM,GAAG,IAAIX,KAAJ,GAAYU,GAAZ,CAAiBL,WAAjB,CAAf;AAEA,MAAMO,GAAG,GAAG,IAAIX,OAAJ,CAAaQ,MAAM,CAACI,CAApB,EAAuBJ,MAAM,CAACK,CAA9B,EAAiCL,MAAM,CAACM,CAAxC,CAAZ;AACA,MAAMC,MAAM,GAAG,IAAIf,OAAJ,CAAaU,MAAM,CAACE,CAApB,EAAuBF,MAAM,CAACG,CAA9B,EAAiCH,MAAM,CAACI,CAAxC,CAAf,CARiE,CAUjE;;AACA,MAAME,EAAE,GAAGC,IAAI,CAACC,IAAL,CAAWD,IAAI,CAACE,EAAhB,CAAX;AACA,MAAMC,EAAE,GAAGJ,EAAE,GAAGC,IAAI,CAACC,IAAL,CAAW,IAAX,CAAhB;AAEA,OAAKG,EAAL,CAAQC,YAAR,CAAsB,CAAtB,EAA0BC,IAA1B,CAAgCZ,GAAhC,EAAsCa,GAAtC,CAA2CT,MAA3C,EAAoDU,cAApD,CAAoET,EAApE;AACA,OAAKK,EAAL,CAAQC,YAAR,CAAsB,CAAtB,EAA0BC,IAA1B,CAAgCZ,GAAhC,EAAsCe,GAAtC,CAA2CX,MAA3C,EAAoDU,cAApD,CAAoEL,EAApE;AAEA;;AAEDlB,oBAAoB,CAACyB,SAArB,GAAiCC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAe7B,UAAU,CAAC0B,SAA1B,CAAf,EAAsD;AAEtFI,EAAAA,WAAW,EAAE7B,oBAFyE;AAItF8B,EAAAA,sBAAsB,EAAE,IAJ8D;AAMtFT,EAAAA,IAAI,EAAE,cAAWU,MAAX,EAAoB;AAAE;AAE3BhC,IAAAA,UAAU,CAAC0B,SAAX,CAAqBJ,IAArB,CAA0BjB,IAA1B,CAAgC,IAAhC,EAAsC2B,MAAtC;AAEA,WAAO,IAAP;AAEA,GAZqF;AActFC,EAAAA,MAAM,EAAE,gBAAWC,IAAX,EAAkB;AAEzB,QAAMC,IAAI,GAAGnC,UAAU,CAAC0B,SAAX,CAAqBO,MAArB,CAA4B5B,IAA5B,CAAkC,IAAlC,EAAwC6B,IAAxC,CAAb,CAFyB,CAIzB;;AAEA,WAAOC,IAAP;AAEA;AAtBqF,CAAtD,CAAjC;AA0BA,SAASlC,oBAAT","sourcesContent":["import { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LightProbe } from './LightProbe.js';\n\nfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tconst color1 = new Color().set( skyColor );\n\tconst color2 = new Color().set( groundColor );\n\n\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\tconst c0 = Math.sqrt( Math.PI );\n\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n}\n\nHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: HemisphereLightProbe,\n\n\tisHemisphereLightProbe: true,\n\n\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\nexport { HemisphereLightProbe };\n"]},"metadata":{},"sourceType":"module"}